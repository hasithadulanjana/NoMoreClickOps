#!/bin/bash

# Check if AWS CLI is installed
if ! command -v aws &> /dev/null
then
    echo "AWS CLI is not installed. Please install it first."
    exit 1
fi

# Check if jq is installed (used for parsing JSON output)
if ! command -v jq &> /dev/null
then
    echo "jq is not installed. Please install it for better output formatting."
    exit 1
fi

# Default values
STACK_NAME=""
TEMPLATE_FILE=""
REGION=""

# Function to display usage
usage() {
    echo "Usage: $0 -n STACK_NAME -t TEMPLATE_FILE [-r REGION]"
    echo "  -n STACK_NAME     : Name of the CloudFormation stack"
    echo "  -t TEMPLATE_FILE  : Path to the CloudFormation template file"
    echo "  -r REGION         : AWS region (optional, uses default if not specified)"
    exit 1
}

# Parse command line arguments
while getopts "n:t:r:" opt; do
    case $opt in
        n) STACK_NAME="$OPTARG"
        ;;
        t) TEMPLATE_FILE="$OPTARG"
        ;;
        r) REGION="$OPTARG"
        ;;
        *) usage
        ;;
    esac
done

# Check if required parameters are provided
if [ -z "$STACK_NAME" ] || [ -z "$TEMPLATE_FILE" ]; then
    usage
fi

# Check if template file exists
if [ ! -f "$TEMPLATE_FILE" ]; then
    echo "Template file does not exist: $TEMPLATE_FILE"
    exit 1
fi

# Set region parameter if provided
REGION_PARAM=""
if [ ! -z "$REGION" ]; then
    REGION_PARAM="--region $REGION"
fi

# Check if stack exists
if aws cloudformation describe-stacks --stack-name "$STACK_NAME" $REGION_PARAM &> /dev/null; then
    echo "Updating existing stack: $STACK_NAME"
    ACTION="update-stack"
else
    echo "Creating new stack: $STACK_NAME"
    ACTION="create-stack"
fi

# Execute CloudFormation command
aws cloudformation $ACTION \
    --stack-name "$STACK_NAME" \
    --template-body "file://$TEMPLATE_FILE" \
    $REGION_PARAM \
    --capabilities CAPABILITY_NAMED_IAM \
    --output json | jq .

# Check the status of the stack
echo "Waiting for stack operation to complete..."
aws cloudformation wait stack-$ACTION-complete --stack-name "$STACK_NAME" $REGION_PARAM

# Get the final status of the stack
STACK_STATUS=$(aws cloudformation describe-stacks --stack-name "$STACK_NAME" $REGION_PARAM --query 'Stacks[0].StackStatus' --output text)

echo "Stack operation completed with status: $STACK_STATUS"

# If the operation was successful, display the stack outputs
if [ "$STACK_STATUS" == "CREATE_COMPLETE" ] || [ "$STACK_STATUS" == "UPDATE_COMPLETE" ]; then
    echo "Stack outputs:"
    aws cloudformation describe-stacks --stack-name "$STACK_NAME" $REGION_PARAM --query 'Stacks[0].Outputs' --output table
fi
